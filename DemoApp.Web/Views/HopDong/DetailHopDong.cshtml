@model DemoApp.Entities.HopDongLaoDong
@using DemoApp.Entities;
@{
    ViewBag.Title = "DetailHopDong";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Chi tiết hợp đồng</h2>

<div class="row mt-5">
    <div class="col-md-3">
        <h4 class="text-center mb-4 ">Thông tin chi tiết</h4>
        <div>
            <div class="row">
                <div class="col-md-12">
                    <div class="info-pair mb-3">
                        <span class="info-label font-weight-bold">Mã hợp đồng:</span>
                        <span class="info-value" data-id="@Model.MaNV">@Html.DisplayFor(model => model.MaHD)</span>
                    </div>

                    <div class="info-pair mb-3">
                        <span class="info-label font-weight-bold">Tên nhân viên:</span>
                        <span class="info-value">
                            @{
                                var maNV = Model.MaNV;
                                var danhSachNhanVien = ViewBag.DanhSachNhanVien as List<NhanVien>;
                                var nhanVien = danhSachNhanVien.FirstOrDefault(nv => nv.MaNV == maNV);
                                if (nhanVien != null)
                                {
                                    @nhanVien.HoTen
                                }
                                else
                                {
                                    @("Không có") // Hoặc thông báo khác nếu không có giá trị
                                }
                            }
                        </span>
                    </div>

                    <div class="info-pair mb-3">
                        <span class="info-label font-weight-bold">Tên loại hợp đồng:</span>
                        <span class="info-value">
                            @{
                                var maLoaiHD = Model.MaLoaiHD;
                                var danhSachLoaiHD = ViewBag.DanhSachLoaiHD as List<LoaiHopDong>;
                                var loaiHD = danhSachLoaiHD.FirstOrDefault(lhd => lhd.MaLoaiHD == maLoaiHD);
                                if (loaiHD != null)
                                {
                                    @loaiHD.TenLoaiHD
                                }
                                else
                                {
                                    @("Không có") // Hoặc thông báo khác nếu không có giá trị
                                }
                            }
                        </span>
                    </div>

                </div>
            </div>
        </div>
        <div class="btn-group mt-3">
            <button class="btn btn-success text-white" data-toggle="modal" data-target="#createFileHopDongModal"> Thêm file hợp đồng</button>
            <button class="btn btn-danger" onclick="goBack()">Quay lại</button>

        </div>
    </div>
    <div class="col-md-9">
        <div id="fileHopDongListContainer"></div>

    </div>
</div>

<div class="modal fade" id="createFileHopDongModal" tabindex="-1" role="dialog" aria-labelledby="createFileHopDongModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createFileHopDongModalLabel">Thêm File Hợp Đồng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UploadFile", "HopDong", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="TenFile">Tên File</label>
                        <input type="text" class="form-control" id="TenFile" name="TenFile" required>
                    </div>
                    <div class="form-group">
                        <label for="LuuTru">Lưu Trữ</label>
                        <input type="file" class="form-control" id="LuuTru" name="LuuTru" multiple>
                    </div>
                    <div class="form-group">
                        <label for="GhiChu">Ghi Chú</label>
                        <input type="text" class="form-control" id="GhiChu" name="GhiChu">
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                <button id="addFileHopDong" type="submit" class="btn btn-primary">Lưu</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        loadFileHopDongList();
    });

    function loadFileHopDongList() {
        var maHopDong = @Model.MaHD; // Lấy mã hợp đồng từ Model

        $.ajax({
            type: "GET",
            url: "@Url.Action("FileHopDongList", "HopDong")", // Điều hướng tới hàm Action trả về PartialView FileHopDongList
            data: { maHopDong: maHopDong },
            dataType: 'html',
            success: function (data) {

                $("#fileHopDongListContainer").html(data);
            },
            error: function (error) {
                console.error('Lỗi khi tải danh sách File Hợp Đồng:', error);
            }
        });
    }
 

    $("#addFileHopDong").click(function () {
        // Lấy giá trị từ các trường
        var tenFile = $("#TenFile").val().trim();
        var luuTru = $("#LuuTru")[0].files;
        var ghiChu = $("#GhiChu").val().trim();

        // Thực hiện kiểm tra hợp lệ
        if (!tenFile) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: 'Vui lòng nhập tên file.',
            });
            return;
        }

        if (!luuTru.length) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: 'Vui lòng chọn ít nhất một file.',
            });
            return;
        }

        // Tạo FormData để gửi dữ liệu bao gồm tất cả các tệp lên máy chủ
        var formData = new FormData();
        formData.append("TenFile", tenFile);

        // Lấy danh sách tên file và nối chúng bằng dấu "|"
        var fileNames = [];
        for (var i = 0; i < luuTru.length; i++) {
            fileNames.push(luuTru[i].name);
        }
        formData.append("LuuTru", fileNames.join("|"));

        formData.append("GhiChu", ghiChu);
        // Lấy mã hợp đồng từ Model
        formData.append("MaHD", @Model.MaHD);
        // Gửi dữ liệu lên máy chủ bằng AJAX
        $.ajax({
            type: "POST",
            url: "@Url.Action("CreateFileHopDong", "HopDong")",
            data: formData,
        processData: false,
        contentType: false,
        success: function (response) {
            if (response.success) {
                // Hiển thị thông báo thành công
                Swal.fire({
                    icon: 'success',
                    title: 'Tạo file thành công!',
                    showConfirmButton: false,
                    timer: 1500
                });

                // Đóng modal
                $("#createFileHopDongModal").modal("hide");
                // Xóa giá trị trường "Tên File" và "Lưu Trữ"
                $("#TenFile").val("");
                $("#LuuTru").val("");
                // Đặt trường "Ghi Chú" theo ý muốn
                // Tải lại danh sách file hợp đồng (nếu cần)
            } else {
                console.error("Lỗi khi tải file hợp đồng:", response.message);
            }
        },
        error: function (error) {
            console.error("Lỗi khi tải file hợp đồng:", error);
        }
    });
    });

</script>