

@model IEnumerable<DemoApp.Entities.HopDongLaoDong>
@using DemoApp.Entities;
<h3 class="mt-4 text-center">Danh sách hợp đồng làm việc</h3>

<table class="table table-condensed mt-4">
    <thead>
        <tr>
            <th>Loại hợp đồng</th>
            <th>Từ ngày</th>
            <th>Đến ngày</th>
            <th class="text-center">Thao tác</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="hidden">@item.MaHD</td>
                <td data-hopdong="@item.MaLoaiHD">
                    @{
                        var maLoaiHD = item.MaLoaiHD;
                        var danhSachLoaiHD = ViewBag.DanhSachLoaiHD as List<DemoApp.Entities.LoaiHopDong>;

                        if (danhSachLoaiHD != null)
                        {
                            var loaiHD = danhSachLoaiHD.FirstOrDefault(lhd => lhd.MaLoaiHD == maLoaiHD);

                            if (loaiHD != null)
                            {
                                @loaiHD.TenLoaiHD
                            }
                            else
                            {
                                @("Phòng ban không xác định")
                            }
                        }
                        else
                        {
                            @("Danh sách phòng ban không có")
                        }
                    }
                </td>
                <td>
                    @if (item.TuNgay.HasValue)
                    {
                        @item.TuNgay.Value.ToString("dd/MM/yyyy")
                    }
                    else
                    {@("Không có")}
                </td>
                <td>
                    @if (item.DenNgay.HasValue)
                    {
                        @item.DenNgay.Value.ToString("dd/MM/yyyy")
                    }
                    else
                    {@("Không có")}
                </td>
                <td class="hidden">
                    @item.MaNV
                </td>              
                <td class="btn-group">
                    <button class=" btn-warning btn-sm editHopDongButton text-white" data-toggle="modal" data-target="#editHopDongModal" data-id="@item.MaHD"><i class="fa fa-pencil" aria-hidden="true"></i> Sửa</button> |
                    @using (Html.BeginForm("DetailHopDong", "HopDong", new { id = item.MaHD }, FormMethod.Post))
                    {
                        <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-info-circle" aria-hidden="true"></i> Chi tiết</button>
                    }

                    | <button class="btn-danger btn-sm" data-toggle="modal" data-target="#deleteModalHopDong" data-delete-hopdong-id="@item.MaHD"><i class="fa fa-trash" aria-hidden="true"></i> Xoá</button>
                </td>
                
            </tr>
        }
    </tbody>
</table>
<!-- Modal Sửa Hợp Đồng -->
<div class="modal fade" id="editHopDongModal" tabindex="-1" role="dialog" aria-labelledby="editHopDongModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editHopDongModalLabel">Sửa Hợp Đồng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editHopDongForm">
                    <div class="form-group">
                        <label for="editLoaiHD">Loại hợp đồng:</label>
                        <select class="form-control" id="editLoaiHD" name="editLoaiHD">
                            <!-- Option để hiển thị các loại hợp đồng -->
                            @foreach (var loaiHD in ViewBag.DanhSachLoaiHD as List<DemoApp.Entities.LoaiHopDong>)
                            {
                                <option value="@loaiHD.MaLoaiHD">@loaiHD.TenLoaiHD</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editTuNgay">Từ ngày:</label>
                        <input type="text" class="form-control" data-provide="datepicker" data-date-format="dd/mm/yyyy" id="editTuNgay">
                    </div>
                    <div class="form-group">
                        <label for="editDenNgay">Đến ngày:</label>
                        <input type="text" class="form-control" data-provide="datepicker" data-date-format="dd/mm/yyyy" id="editDenNgay">
                    </div>
                    <!-- Kết thúc ví dụ -->
                    <input type="hidden" id="editMaNVHopDong">
                    <input type="hidden" id="editMaHD">
                    <button type="submit" class="btn btn-success float-right" >Lưu Thay Đổi</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Xoá quá trình -->
<div class="modal fade" id="deleteModalHopDong" tabindex="-1" role="dialog" aria-labelledby="deleteHopDongModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteQuaTrinhModalLabel">Xác Nhận Xoá Hợp Đồng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xoá hợp đồng lao động này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <form id="deleteForm" action="" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteHopDongId" />
                    <button type="submit" class="btn btn-danger" id="btn-delete-hopDong-modal">Xoá</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>

   // Sự kiện khi modal sửa hợp đồng được mở
    $('.editHopDongButton').click(function () {
        var row = $(this).closest('tr');
        var editMaHD = row.find('td:eq(0)').text(); // Lấy ID hợp đồng từ cột ẩn
        var editLoaiHD = row.find('td:eq(1)').data('hopdong');
        var editTuNgay = row.find('td:eq(2)').text();
        var editDenNgay = row.find('td:eq(3)').text();
        var editMaNV = row.find('td:eq(4)').text();

  
        // Đưa thông tin vào modal sửa hợp đồng
        $('#editMaHD').val(editMaHD);
        $('#editLoaiHD').val(editLoaiHD);
        $('#editTuNgay').val(editTuNgay);
        $('#editDenNgay').val(editDenNgay);
        $('#editMaNV').val(editMaNV);
        // Hiển thị modal

        $('#editHopDongModal').modal('show');
    });

    // Sự kiện khi form sửa thông tin hợp đồng được submit
    $('#editHopDongForm').submit(function (event) {
        event.preventDefault(); // Ngăn chặn form gửi thông tin một cách truyền thống

        // Lấy thông tin từ form
        var editMaHD = $('#editMaHD').val();
        var editMaNV = $('#editMaNV').val();
        var editLoaiHD = $('#editLoaiHD').val();
        var editTuNgay = $('#editTuNgay').val();
        var editDenNgay = $('#editDenNgay').val();
        if (editTuNgay === "") {
            // Hiển thị thông báo lỗi
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: 'Vui lòng chọn thời gian bắt đầu.',
            });
            return; // Ngăn chặn tiếp tục thực hiện AJAX nếu có lỗi
        }
        if (editDenNgay.trim() === "Không có") {
            editDenNgay = "";
        }
        if (editDenNgay !== "") {
            if (editTuNgay > editDenNgay) {
                // Hiển thị thông báo lỗi
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc.',
                });
                return; // Ngăn chặn tiếp tục thực hiện AJAX nếu có lỗi
            }
            var formattedEditDenNgay = textToDate(editDenNgay).toISOString().substring(0, 10);

        }

        // Chuyển đổi ngày thành chuỗi "yyyy-MM-dd" cho input type="date"
        var formattedEditTuNgay = textToDate(editTuNgay).toISOString().substring(0, 10);

        // Gửi dữ liệu thông qua AJAX
        $.ajax({
            type: "POST",
            url: "/HopDong/Update", // Đặt URL cập nhật hợp đồng tại đây
            data: {
                maHD: editMaHD,
                maNV: editMaNV,
                maLoaiHD: editLoaiHD,
                tuNgay: formattedEditTuNgay,
                denNgay: formattedEditDenNgay
            },
            success: function (response) {
                if (response.success) {
                    // Hiển thị thông báo thành công
                    Swal.fire({
                        icon: 'success',
                        title: 'Cập nhật thành công!',
                        showConfirmButton: false,
                        timer: 1500
                    });

                    // Đóng modal sau khi sửa thành công
                    $('#editHopDongModal').modal('hide');

                    // Tải lại bảng dữ liệu sau khi cập nhật
                    loadTableDataHopDong();
                } else {
                    // Xử lý lỗi nếu có
                    // Hiển thị thông báo thất bại
                    Swal.fire({
                        icon: 'error',
                        title: 'Cập nhật thất bại!',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            },
            error: function (error) {
                // Xử lý lỗi AJAX nếu có
                console.error('Lỗi AJAX: ' + JSON.stringify(error));
            }
        });
    });


    // Sự kiện khi nút "Xoá" được bấm
    $('#deleteModalHopDong').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Nút "Xoá" được bấm
        var deleteHopDongId = button.data('delete-hopdong-id'); // Lấy mã phòng ban cần xoá từ thuộc tính data-delete-id

        // Gán mã  vào trường ẩn trong modal xoá
        $('#deleteHopDongId').val(deleteHopDongId);
    });

    // Sự kiện khi nút "Xoá" trong modal được bấm
    $('#btn-delete-hopDong-modal').click(function (event) {
        event.preventDefault(); // Ngăn chặn hành động mặc định của form

        // Lấy mã phòng ban cần xoá từ trường ẩn trong modal
        var deleteHopDongId = $('#deleteHopDongId').val();

        // Gửi yêu cầu xoá thông qua Ajax
        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteConfirmed", "HopDong")" + '/' + deleteHopDongId, // Tạo URL cho việc xoá
            data: {
            __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()
            }, // Cần gửi Token chống CSRF nếu sử dụng AntiForgeryToken
        success: function (response) {
            if (response.success) {
                // Hiển thị thông báo thành công
                Swal.fire({
                    icon: 'success',
                    title: 'Xoá thành công!',
                    showConfirmButton: false,
                    timer: 1500
                });

                // Đóng modal sau khi xoá thành công
                $('#deleteModalHopDong').modal('hide');

                // Tải lại bảng dữ liệu sau khi xoá
                loadTableDataHopDong();
            } else {
                // Xử lý lỗi nếu có
                console.error("Lỗi khi xoá nhân viên:", response.message);
            }
        },
        error: function (error) {
            // Xử lý lỗi nếu có
            console.error("Lỗi khi xoá nhân viên:", error);
        }
    });
    });
</script>